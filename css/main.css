/*! HTML5 Boilerplate v6.0.1 | MIT License | https://html5boilerplate.com/ */

/*
 * What follows is the result of much research on cross-browser styling.
 * Credit left inline and big thanks to Nicolas Gallagher, Jonathan Neal,
 * Kroc Camen, and the H5BP dev community and team.
 */

/* ==========================================================================
Base styles: opinionated defaults
========================================================================== */

html {
  color: #222;
  font-size: 1em;
  line-height: 1.4;
}

/*
 * Remove text-shadow in selection highlight:
 * https://twitter.com/miketaylr/status/12228805301
 *
 * Vendor-prefixed and regular ::selection selectors cannot be combined:
 * https://stackoverflow.com/a/16982510/7133471
 *
 * Customize the background color to match your design.
 */

::-moz-selection {
  background: #b3d4fc;
  text-shadow: none;
}

::selection {
  background: #b3d4fc;
  text-shadow: none;
}

/*
 * A better looking default horizontal rule
 */

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #ccc;
  margin: 1em 0;
  padding: 0;
}

/*
 * Remove the gap between audio, canvas, iframes,
 * images, videos and the bottom of their containers:
 * https://github.com/h5bp/html5-boilerplate/issues/440
 */

audio,
canvas,
iframe,
img,
svg,
video {
  vertical-align: middle;
}

/*
 * Remove default fieldset styles.
 */

fieldset {
  border: 0;
  margin: 0;
  padding: 0;
}

/*
 * Allow only vertical resizing of textareas.
 */

textarea {
  resize: vertical;
}

/* ==========================================================================
Browser Upgrade Prompt
========================================================================== */

.browserupgrade {
  margin: 0.2em 0;
  background: #ccc;
  color: #000;
  padding: 0.2em 0;
}

/* ==========================================================================
Author's custom styles
========================================================================== */

html, body {
  height: 100%;
  width: 100%;
  background-color: black;
}

a {
  text-decoration: none;
}

.container {
  height: 100%;
  width: 100%;
}

.header {
  position: absolute;
  top: 0%;
  height: 15%;
  width: 100%;
  padding-top: 32px;
}

.header-sec-1 {
  float: left;
  width: 33%;
  height: 100%;
}

.header-sec-2 {
  margin-left: 33%;
  width: 33%;
  height: 100%;
}

.first-third {
  float: left;
  width: 20%;
  height: 100%;
  margin-left: 20%;
  padding-top: 32px;
}

.second-third {
  float: left;
  width: 20%;
  height: 100%;
  padding-top: 32px;
}

.third-third {
  float: left;
  width: 20%;
  height: 100%;
  margin-right: 20%;
  padding-top: 32px;
}

.press-start {
  color: white;
  font-family: "Press Start 2P", cursive;
  margin: auto;
  font-size:16px;
  -webkit-animation: 2s blinker linear infinite;
  -moz-animation: 2s blinker linear infinite;
}

.body-text {
  color: aqua;
  font-family: "Press Start 2P", cursive;
  margin: auto;
  font-size:16px;
}

.variable-text {
  color: orange;
  font-family: "Press Start 2P", cursive;
  margin: auto;
  font-size:16px;
}

.points-title {
  color: red;
  font-family: "Press Start 2P", cursive;
  margin: auto;
  font-size:16px;
}

.points {
  color: white;
  font-family: "Press Start 2P", cursive;
  margin: auto;
  font-size:16px;
}

.main {
  position: absolute;
  top: 20%;
  height: 70%;
  width: 100%;
  padding-top: 32px;
}

.footer {
  top: 90%;
  position: absolute;
  height: 10%;
  width: 100%;
}

.intro {
  position: absolute;
  top: 40%;
  height: 60%;
  width: 100%;
  background-color: black;
}

@-webkit-keyframes typing {
  from { width: 0 }
  to { width:17em }
}

@-moz-keyframes typing {
  from { width: 0 }
  to { width:17em }
}

@-webkit-keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: white }
}

@-moz-keyframes blink-caret {
  from, to { border-color: transparent }
  50% { border-color: white }
}

@-moz-keyframes blinker {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
}

@-webkit-keyframes blinker {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
}

@keyframes blinker {
  0% { opacity: 1.0; }
  50% { opacity: 0.0; }
  100% { opacity: 1.0; }
}

.typed-text {
  color: white;
  font-family: "Press Start 2P", cursive;
  width: 17em;
  margin: auto;
  font-size:32px;
  white-space:nowrap;
  overflow:hidden;
  border-right: .1em solid black;

  -webkit-animation: typing 5s steps(17, end), /* # of steps = # of characters */
  blink-caret 1s step-end infinite;
  -moz-animation: typing 5s steps(17, end), /* # of steps = # of characters */
  blink-caret 1s step-end infinite;
}

/* ==========================================================================
Helper classes
========================================================================== */

/*
 * Hide visually and from screen readers
 */

.hidden {
  display: none !important;
}

/*
 * Hide only visually, but have it available for screen readers:
 * https://snook.ca/archives/html_and_css/hiding-content-for-accessibility
 *
 * 1. For long content, line feeds are not interpreted as spaces and small width
 *    causes content to wrap 1 word per line:
 *    https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe
 */

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  -webkit-clip-path: inset(50%);
  clip-path: inset(50%);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
  white-space: nowrap; /* 1 */
}

/*
 * Extends the .visuallyhidden class to allow the element
 * to be focusable when navigated to via the keyboard:
 * https://www.drupal.org/node/897638
 */

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  -webkit-clip-path: none;
  clip-path: none;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
  white-space: inherit;
}

/*
 * Hide visually and from screen readers, but maintain layout
 */

.invisible {
  visibility: hidden;
}

/*
 * Clearfix: contain floats
 *
 * For modern browsers
 * 1. The space content is one way to avoid an Opera bug when the
 *    `contenteditable` attribute is included anywhere else in the document.
 *    Otherwise it causes space to appear at the top and bottom of elements
 *    that receive the `clearfix` class.
 * 2. The use of `table` rather than `block` is only necessary if using
 *    `:before` to contain the top-margins of child elements.
 */

.clearfix:before,
.clearfix:after {
  content: " "; /* 1 */
  display: table; /* 2 */
}

.clearfix:after {
  clear: both;
}

/* ==========================================================================
EXAMPLE Media Queries for Responsive Design.
These examples override the primary ('mobile first') styles.
Modify as content requires.
========================================================================== */

@media only screen and (min-width: 35em) {
  /* Style adjustments for viewports that meet the condition */
}

@media print,
(-webkit-min-device-pixel-ratio: 1.25),
(min-resolution: 1.25dppx),
(min-resolution: 120dpi) {
  /* Style adjustments for high resolution devices */
}

/* ==========================================================================
Print styles.
Inlined to avoid the additional HTTP request:
http://www.phpied.com/delay-loading-your-print-css/
========================================================================== */

@media print {
  *,
  *:before,
  *:after {
    background: transparent !important;
    color: #000 !important; /* Black prints faster:
    http://www.sanbeiji.com/archives/953 */
box-shadow: none !important;
text-shadow: none !important;
    }

    a,
    a:visited {
      text-decoration: underline;
    }

    a[href]:after {
      content: " (" attr(href) ")";
    }

    abbr[title]:after {
      content: " (" attr(title) ")";
    }

    /*
     * Don't show links that are fragment identifiers,
     * or use the `javascript:` pseudo protocol
     */

a[href^="#"]:after,
a[href^="javascript:"]:after {
  content: "";
}

pre {
  white-space: pre-wrap !important;
}
pre,
blockquote {
  border: 1px solid #999;
  page-break-inside: avoid;
}

/*
 * Printing Tables:
 * http://css-discuss.incutio.com/wiki/Printing_Tables
 */

thead {
  display: table-header-group;
}

tr,
img {
  page-break-inside: avoid;
}

p,
h2,
h3 {
  orphans: 3;
  widows: 3;
}

h2,
h3 {
  page-break-after: avoid;
}
}
